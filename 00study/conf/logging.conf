#./logging.conf
# Loggers-->Handlers-->Formatters-->Filters
# 记录器、处理器、过滤器和格式器。

# 记录器暴露了应用程序代码直接使用的接口
# 处理器将日志记录（由记录器创建）发送到适当的目标
# 过滤器提供了更细粒度的功能，用于确定要输出的日志记录
# 格式器指定最终输出中日志记录的样式

###################################################
#记录器：提供应用程序代码直接使用的接口
#设置记录器名称，root必须存在！！！
[loggers]
keys=root, applog

#处理器，将记录器产生的日志发送至目的地
#设置处理器类型
[handlers]
keys=fileHandler, consoleHandler

#格式化器，设置日志内容的组成结构和消息字段
#设置格式化器的种类
[formatters]
keys=simpleFormatter

###################################################
#设置记录器root的级别与种类
[logger_root]
level=DEBUG
handlers=consoleHandler

#设置记录器applog的级别与种类
[logger_applog]
level=INFO
handlers=fileHandler,consoleHandler
#起个对外的名字
qualname=applog
#继承关系
propagate=0

###################################################
#设置
[handler_consoleHandler]
class=StreamHandler
args=(sys.stdout, )
level=DEBUG
formatter=simpleFormatter

[handler_fileHandler]
class=handlers.TimedRotatingFileHandler
#在午夜1点（3600s）开启下一个log文件，第四个参数0表示保留历史文件
# args=('logs/applog.log','midnight',3600,0)

# 定义一个1秒换一次log文件的handler, 保留3个旧log文件
args=('logs/applog.log', 'S', 1, 3)
level=DEBUG
formatter=simpleFormatter

###################################################
[formatter_simpleFormatter]
#format=[%(asctime)s] [%(process)s] [%(levelname)-.1s] [%(filename)s:%(lineno)4dL: %(funcName)s]: %(message)s
#format=[%(levelname)-.1s][%(asctime)s.%(msecs)03d][%(process)s][%(filename)s:%(lineno)d:%(funcName)s][logger=%(name)s]: %(message)s
format=[%(levelname)-.1s][%(asctime)s.%(msecs)03d][%(process)s][%(filename)s:%(lineno)d:%(funcName)s]: %(message)s

#设置时间输出格式
datefmt=%Y-%m-%d %H:%M:%S
